name: rebase

on:
  workflow_call:
    inputs:
      branch:
        description: "The branch to rebase."
        required: false
        type: string
        default: "dotnet-vnext"
      repository:
        description: "The repository to rebase."
        required: true
        type: string
      force:
        description: "Whether to rebase even if the branch has no conflicts."
        required: false
        type: boolean
        default: false
      base:
        description: "The branch to rebase against."
        required: false
        type: string
        default: ""
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to rebase."
        required: false
        type: choice
        options:
          - "dotnet-vnext"
          - "dotnet-nightly"
        default: "dotnet-vnext"
      repository:
        description: "An optional single repository to rebase."
        required: false
        type: string
        default: ""
      force:
        description: "Whether to rebase even if the branch has no conflicts."
        required: false
        type: boolean
        default: false
      base:
        description: "The branch to rebase against."
        required: false
        type: choice
        options:
          - "main"
          - "dotnet-vnext"
        default: "main"

permissions: {}

env:
  FORCE_COLOR: 3
  TERM: xterm

jobs:
  get-repos:

    outputs:
      repos: ${{ steps.get-repos.outputs.repositories }}

    permissions: {}

    runs-on: [ ubuntu-latest ]

    steps:

      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Get repositories to rebase
        uses: ./actions/get-rebase-repos
        id: get-repos
        with:
          base: ${{ inputs.base }}
          branch: ${{ inputs.branch }}
          force: ${{ inputs.force }}
          github-token: ${{ secrets.ACCESS_TOKEN }}
          repository: ${{ inputs.repository }}

  rebase:
    name: "rebase-${{ matrix.repo }}"
    needs: get-repos
    if: ${{ needs.get-repos.outputs.repos != '[]' }}
    runs-on: [ ubuntu-latest ]

    concurrency:
      group: "rebase-${{ matrix.repo }}"
      cancel-in-progress: false

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        repo: ${{ fromJSON(needs.get-repos.outputs.repos) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 0
          ref: ${{ inputs.branch }}
          repository: ${{ matrix.repo }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Rebase ${{ inputs.branch }}
        uses: martincostello/rebaser@754be8849a7a1df5add22da7751cbb22fde41263 # v1.1.0
        id: rebase
        with:
          branch: origin/${{ inputs.base || 'main' }}
          user-email: ${{ vars.REBASE_GIT_COMMIT_USER_EMAIL }}
          user-name: ${{ vars.REBASE_GIT_COMMIT_USER_NAME }}

      - name: Push changes
        if : ${{ steps.rebase.outputs.result == 'success' }}
        shell: pwsh
        run: |
          git push --force-with-lease origin "${{ inputs.branch }}"
          if ($LASTEXITCODE -eq 0) {
            Write-Output "::notice::Rebased the ${{ inputs.branch }} branch of ${{ matrix.repo }}."
          }
          else {
            Write-Output "::error::Could not push changes to the ${{ inputs.branch }} branch of ${{ matrix.repo }}."
          }
