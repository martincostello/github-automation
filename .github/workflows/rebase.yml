name: rebase

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to rebase."
        required: false
        type: choice
        options:
          - "dotnet-vnext"
        default: "dotnet-vnext"

permissions: {}

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  FORCE_COLOR: 3
  NUGET_XMLDOC_MODE: skip
  TERM: xterm

jobs:
  build:
    name: build

    permissions:
      contents: read

    runs-on: [ ubuntu-latest ]

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3

      - name: Build rebaser
        shell: pwsh
        run: dotnet publish ./src/Rebaser/Rebaser.csproj --configuration Release --output ./artifacts --runtime linux-x64 --self-contained true

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rebaser
          path: ./artifacts
          if-no-files-found: error

  rebase:
    name: "rebase-${{ matrix.repo }}"
    needs: [ build ]
    runs-on: [ ubuntu-latest ]

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        repo:
          - "justeattakeaway/ApplePayJSSample"
          - "justeattakeaway/httpclient-interception"
          - "justeattakeaway/JustEat.StatsD"
          - "justeattakeaway/JustSaying"
          - "martincostello/adventofcode"
          - "martincostello/alexa-london-travel"
          - "martincostello/alexa-london-travel-site"
          - "martincostello/antiforgery-testing-application-part"
          - "martincostello/api"
          - "martincostello/apple-fitness-workout-mapper"
          - "martincostello/aspnet-core-pseudo-localization"
          - "martincostello/browserstack-automate"
          - "martincostello/costellobot"
          - "martincostello/dependabot-helper"
          - "martincostello/dotnet-minimal-api-integration-testing"
          - "martincostello/dotnet-patch-automation-sample"
          - "martincostello/dotnet-playwright-tests"
          - "martincostello/dotnet-repo-template"
          - "martincostello/home"
          - "martincostello/lambda-test-server"
          - "martincostello/polly-rate-limiting"
          - "martincostello/project-euler"
          - "martincostello/Pseudolocalizer"
          - "martincostello/SignInWithAppleSample"
          - "martincostello/sqllocaldb"
          - "martincostello/website"
          - "martincostello/xunit-logging"

    steps:
      - name: Check branch exists
        id: branch-exists
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          gh api "repos/${{ matrix.repo }}/branches/${{ inputs.branch }}" | Out-Null
          $exists = $LASTEXITCODE -eq 0
          "branch-exists=$($exists.ToString().ToLower())" >> $env:GITHUB_OUTPUT
          exit 0

      - name: Checkout code
        uses: actions/checkout@v3
        if: ${{ steps.branch-exists.outputs.branch-exists == 'true' }}
        with:
          repository: ${{ matrix.repo }}
          ref: ${{ inputs.branch }}
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        if: ${{ steps.branch-exists.outputs.branch-exists == 'true' }}
        with:
          name: rebaser
          path: ./artifacts

      - name: Rebase ${{ inputs.branch }}
        shell: pwsh
        if: ${{ steps.branch-exists.outputs.branch-exists == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          $prNumber = gh api "repos/${{ matrix.repo }}/commits/${{ inputs.branch }}/pulls" --jq '.[0] | .number '
          $mergeState = gh api "repos/${{ matrix.repo }}/pulls/${prNumber}" --jq '.mergeable_state'

          if ($mergeState -ne "dirty") {
            Write-Host "::debug::The ${{ inputs.branch }} branch of ${{ matrix.repo }} has no conflicts so does not need to be rebased."
          }
          else {
            chmod +x ./artifacts/Rebaser
            & ./artifacts/Rebaser "${{ github.workspace }}"

            if ($LASTEXITCODE -eq 0) {
              git push --force-with-lease origin "${{ inputs.branch }}"
              if ($LASTEXITCODE -eq 0) {
                Write-Host "::notice::Rebased the ${{ inputs.branch }} branch of ${{ matrix.repo }}."
              }
              else {
                Write-Host "::error::Could not push changes to the ${{ inputs.branch }} branch of ${{ matrix.repo }}."
              }
            }
            elseif ($LASTEXITCODE -eq 1) {
              Write-Host "::warning::Could not resolve conflicts for the ${{ inputs.branch }} branch of ${{ matrix.repo }}."
              exit 0
            }
            else {
              Write-Host "::error::Failed to rebase the ${{ inputs.branch }} branch of ${{ matrix.repo }}. Error code: $LASTEXITCODE."
            }
          }
