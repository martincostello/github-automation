name: update-dotnet-sdks

on:
  repository_dispatch:
    types: [ dotnet_release ]
  schedule:
    - cron:  '00 19 * * TUE'
  workflow_call:
    inputs:
      branch:
        description: 'The branch to run the SDK updates for.'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to run the SDK updates for.'
        required: false
        type: choice
        options:
          - 'main'
          - 'dotnet-vnext'
          - 'dotnet-nightly'
        default: 'main'

permissions: {}

jobs:
  get-repos:
    runs-on: [ ubuntu-latest ]

    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: false

    outputs:
      updates: ${{ steps.get-repos.outputs.updates }}

    steps:

      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Get repositories to update
        uses: ./actions/get-sdk-repos
        id: get-repos
        with:
          branch: ${{ (github.event.client_payload && github.event.client_payload.branch) || inputs.branch || '' }}
          github-token: ${{ secrets.COSTELLOBOT_TOKEN }}

  update-sdk:
    name: 'update-${{ matrix.repo }}'
    needs: get-repos
    if: ${{ needs.get-repos.outputs.updates != '[]' }}
    uses: martincostello/update-dotnet-sdk/.github/workflows/update-dotnet-sdk.yml@5a6de7a2df72833fe9e533756af80d36f31a157b # v2.3.1

    concurrency:
      group: 'update-sdk-${{ matrix.repo }}'
      cancel-in-progress: false

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        include: ${{ fromJSON(needs.get-repos.outputs.updates) }}

    with:
      channel: ${{ matrix.channel }}
      include-nuget-packages: ${{ matrix.include-nuget-packages }}
      labels: ${{ matrix.labels }}
      quality: ${{ matrix.quality }}
      ref: ${{ matrix.ref }}
      repo: ${{ matrix.repo }}
      update-nuget-packages: ${{ matrix.update-nuget-packages }}
      user-email: ${{ vars.GIT_COMMIT_USER_EMAIL }}
      user-name: ${{ vars.GIT_COMMIT_USER_NAME }}
    secrets:
      repo-token: ${{ secrets.COSTELLOBOT_TOKEN }}
